<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:p="http://www.springframework.org/schema/p" 
	xmlns:batch="http://www.springframework.org/schema/batch"
	xmlns:mvc="http://www.springframework.org/schema/mvc" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
http://www.springframework.org/schema/context
http://www.springframework.org/schema/context/spring-context-4.0.xsd
http://www.springframework.org/schema/mvc
http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd
http://www.springframework.org/schema/batch 
http://www.springframework.org/schema/batch/spring-batch-2.0.xsd">

	<import resource="applicationContext.xml"/>
	
	<bean id="xmlItemReader" class="org.springframework.batch.item.xml.StaxEventItemReader">
		<property name="resource" value="classpath:xml/employees.xml" />
		<property name="unmarshaller" ref="empUnMarshaller" />
		<property name="fragmentRootElementName" value="employee" />
 	 </bean>
 	
 	<bean id="filterDataProcessor" class="com.doj.batch.processor.DataFilterProcessor" />
 	
    <bean id="csvItemWriter" class="org.springframework.batch.item.file.FlatFileItemWriter">
		<property name="shouldDeleteIfExists" value="true" />
		<property name="resource" value="file:csv/outputs/employees.csv" />
		<property name="lineAggregator">
	  		<bean class="org.springframework.batch.item.file.transform.DelimitedLineAggregator">
				<property name="delimiter" value="," />
				<property name="fieldExtractor">
				  	<bean class="org.springframework.batch.item.file.transform.BeanWrapperFieldExtractor">
						<property name="names" value="empid, name, age, salary, address" />
				    </bean>
		       </property>
	   	   </bean>
		</property>
	 </bean> 
    
    <bean id="empUnMarshaller" class="org.springframework.oxm.jaxb.Jaxb2Marshaller">
		<property name="classesToBeBound">
			<value>com.doj.batch.bean.Employee</value>
		</property>
 	 </bean>	
  
    <batch:job id="simpleDojJob" job-repository="jobRepository" parent="simpleJob">
    	<batch:step id="step1">
    		<batch:tasklet transaction-manager="transactionManager">
    			<batch:chunk reader="xmlItemReader" processor="filterDataProcessor" writer="csvItemWriter" commit-interval="1"/>
    		</batch:tasklet>
    	</batch:step>
    </batch:job>   
</beans>