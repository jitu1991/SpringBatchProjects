<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:p="http://www.springframework.org/schema/p" 
	xmlns:task="http://www.springframework.org/schema/task"
	xmlns:batch="http://www.springframework.org/schema/batch"
	xmlns:mvc="http://www.springframework.org/schema/mvc" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
http://www.springframework.org/schema/context
http://www.springframework.org/schema/context/spring-context-4.0.xsd
http://www.springframework.org/schema/mvc
http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd
http://www.springframework.org/schema/batch 
http://www.springframework.org/schema/batch/spring-batch-2.0.xsd
http://www.springframework.org/schema/task
http://www.springframework.org/schema/task/spring-task-3.2.xsd">
	<context:component-scan base-package="com.doj.batch" />
	<import resource="applicationContext.xml"/>
	<import resource="ApplicationDB.xml"/>
	
	<!-- Writing to MySQL DB -->
	<bean id="xmlItemReader" class="org.springframework.batch.item.xml.StaxEventItemReader">
		<property name="resource" value="classpath:xml/employees.xml" />
		<property name="unmarshaller" ref="empUnMarshaller" />
		<property name="fragmentRootElementName" value="employee" />
 	 </bean>
	<bean id="empUnMarshaller" class="org.springframework.oxm.jaxb.Jaxb2Marshaller">
		<property name="classesToBeBound">
			<value>com.doj.batch.bean.Employee</value>
		</property>
 	 </bean>
 	 
 	 <bean id="databaseItemWriter" class="org.springframework.batch.item.database.JdbcBatchItemWriter">
		<property name="dataSource" ref="dataSource"/>
		<property name="sql">
			<value>
				<![CDATA[        
	            	insert into EMPLOYEE(empname,empAge,salary,empaddress) values (?, ?, ?, ?)
	            ]]>
			</value>
		</property>
		<property name="ItemPreparedStatementSetter">
            <bean class="com.doj.batch.process.EmployeeItemPreparedStatementSetter" />
        </property>
	</bean>
	
	<!-- Writing to MongoDB -->
	<!-- <import resource="mongodbConfig.xml"/>
	
	<bean id="xmlItemReader" class="org.springframework.batch.item.xml.StaxEventItemReader">
		<property name="resource" value="classpath:xml/employees.xml" />
		<property name="unmarshaller" ref="empUnMarshaller" />
		<property name="fragmentRootElementName" value="employee" />
 	 </bean>
	<bean id="empUnMarshaller" class="org.springframework.oxm.jaxb.Jaxb2Marshaller">
		<property name="classesToBeBound">
			<value>com.doj.batch.bean.Employee</value>
		</property>
 	 </bean>
	write it to MongoDB, 'employee' collection (table)
    <bean id="mongodbItemWriter" class="org.springframework.batch.item.data.MongoItemWriter">
		<property name="template" ref="mongoTemplate" />
		<property name="collection" value="employee" />
    </bean> -->
    
    <bean id="employeeFilter" class="com.doj.batch.process.EmployeeFilter"/>
    
    <batch:job id="simpleDojJob" parent="simpleJob">
    	<batch:step id="step1">
    		<batch:tasklet>
    			<!-- <batch:chunk reader="xmlItemReader" writer="mongodbItemWriter" commit-interval="2" processor="employeeFilter"/> -->
    			<batch:chunk reader="xmlItemReader" writer="databaseItemWriter" commit-interval="2" processor="employeeFilter"/>
    		</batch:tasklet>
    	</batch:step>
    </batch:job>   
    
    <bean id="runScheduler" class="com.doj.batch.scheduler.RunScheduler" />
 
  <!-- Run every 10 seconds -->
   <task:scheduled-tasks>
		<task:scheduled ref="runScheduler" method="run" cron="*/10 * * * * *" />
   </task:scheduled-tasks>
</beans>